# На вход программе подается натуральное число n. 
# Напишите программу, которая вычисляет значение выражения

import math

# Считываем натуральное число n
n = int(input())

# Вычисляем сумму ряда
harmonic_sum = sum(1 / i for i in range(1, n + 1))

# Вычисляем результат выражения
result = harmonic_sum - math.log(n)

# Выводим результат
print(result)

#-----------------------------------------------------

# На вход программе подается натуральное число n. 
# Напишите программу, которая вычисляет сумму всех его делителей.

# Считываем натуральное число n
n = int(input())

# Инициализируем переменную для хранения суммы делителей
divisors_sum = 0

# Находим все делители числа n и добавляем их к сумме
for i in range(1, n + 1):
    if n % i == 0:
        divisors_sum += i

# Выводим результат
print(divisors_sum)

#-----------------------------------------------------

# Напишите программу, 
# которая считывает последовательность из 10 целых чисел и определяет, является ли каждое из них чётным или нет.

# Инициализируем переменную для хранения результата
all_even = True

# Считываем 10 чисел
for _ in range(10):
    num = int(input())
    if num % 2 != 0:  # Проверяем, если число нечётное
        all_even = False
        break  # Прекращаем цикл, если найдём нечётное число

# Выводим результат
if all_even:
    print("YES")
else:
    print("NO")
    
#-----------------------------------------------------

# Считываем количество чисел
n = int(input())

# Считываем первое число и инициализируем два наибольших числа
first_max = int(input())
second_max = None

# Обрабатываем оставшиеся n-1 чисел
for _ in range(n - 1):
    num = int(input())
    
    # Обновляем наибольшее и второе наибольшее число
    if num > first_max:
        second_max = first_max
        first_max = num
    elif second_max is None or num > second_max:
        second_max = num

# Выводим наибольшее и второе наибольшее число
print(first_max)
print(second_max)

#-----------------------------------------------------

# Напишите программу, которая считывает натуральное число n и выводит первые 
# n чисел последовательности Фибоначчи.

# Инициализация первых двух чисел последовательности Фибоначчи
fib1 = fib2 = 1

# Считываем число n
n = int(input())

# Проверяем, если n равно 1, выводим только первое число
if n == 1:
    print(fib1)
else:
    # Иначе выводим первые два числа и продолжаем вычисление
    print(fib1, fib2, end=' ')
    for i in range(2, n):
        fib1, fib2 = fib2, fib1 + fib2
        print(fib2, end=' ')
 
#-----------------------------------------------------       

# Этот код подсчитывает общее количество цифр во всех числах из диапазона 
# [99,101], то есть в числах 99,100,101. 

counter = 0
for i in range(99, 102):  # Перебираем числа от 99 до 101 включительно
    temp = i  # temp принимает значение текущего числа i
    while temp > 0:  # Пока temp больше 0
        counter += 1  # Увеличиваем счётчик цифр
        temp //= 10  # Убираем последнюю цифру числа (целочисленное деление на 10)

print(counter)  # Вывод общего количества цифр

#----------------------------------------------------- 

n = int(input("Введите нечётное число: "))  # Вводим нечётное натуральное число

# Верхняя часть треугольника (включая середину)
for i in range(1, n // 2 + 2):  # Идём от 1 до середины треугольника (включительно)
    for j in range(i):  # В каждой строке печатаем i звёзд
        print("*", end="")  # Печатаем звезду без перехода на новую строку
    print()  # После строки звёзд переходим на новую строку

# Нижняя часть треугольника
for i in range(n // 2, 0, -1):  # Идём от середины треугольника вниз (до 1)
    for j in range(i):  # В каждой строке печатаем i звёзд
        print("*", end="")  # Печатаем звезду без перехода на новую строку
    print()  # После строки звёзд переходим на новую строку

#----------------------------------------------------- 

# Дано натуральное число n. Напишите программу, которая печатает численный треугольник 
# с высотой, равной n, в соответствии с примером:
# 1
# 2 3
# 4 5 6

# Вводим натуральное число n
n = int(input("Введите высоту треугольника: "))

# Переменная для текущего числа
current_number = 1

# Внешний цикл для строк треугольника
for i in range(1, n + 1):  # От 1 до n включительно
    # Внутренний цикл для чисел в строке
    for j in range(i):  # Количество чисел в строке равно номеру строки
        print(current_number, end=" ")  # Печатаем число и пробел
        current_number += 1  # Переходим к следующему числу
    print()  # Переход на новую строку

#----------------------------------------------------- 
# 1
# 121
# 12321

n = int(input())

for i in range(1, n + 1):
    # Вывод чисел в порядке возрастания
    for j in range(1, i + 1):
        print(j, end="")
    # Вывод чисел в порядке убывания
    for j in range(i - 1, 0, -1):
        print(j, end="")
    # Переход на новую строку
    print()
    
#----------------------------------------------------- 

# На вход программе подаются два натуральных числа a и b (a< b). 
# Напишите программу, которая находит натуральное число из отрезка [a;b] (от a до b включительно) с максимальной суммой делителей. 
# Если чисел с максимальной суммой делителей несколько, то искомым числом является наибольшее из них. 
# Ваша программа должна выводить ответ в следующем формате: <число с максимальной суммой делителей> <сумма делителей этого числа>

a = int(input())
b = int(input())

max_sum = 0  # Максимальная сумма делителей
max_number = 0  # Число с максимальной суммой делителей

for num in range(a, b + 1):  # Перебираем все числа от a до b
    current_sum = 0  # Сумма делителей текущего числа
    for i in range(1, num + 1):  # Находим делители текущего числа
        if num % i == 0:
            current_sum += i
    # Проверяем, является ли текущая сумма делителей максимальной
    if current_sum > max_sum or (current_sum == max_sum and num > max_number):
        max_sum = current_sum
        max_number = num

print(max_number, max_sum)

