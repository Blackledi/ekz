# На вход программе подается последовательность слов, 
# каждое слово на отдельной строке. Концом последовательности является слово «КОНЕЦ» (без кавычек). При этом само слово «КОНЕЦ» не входит в последовательность, лишь символизируя её окончание. Напишите программу, 
# которая выводит члены данной последовательности.

# Создаем пустой список для хранения слов
words = []

# Запускаем бесконечный цикл для ввода слов
while True:
    word = input()  # Считываем слово с новой строки
    if word == "КОНЕЦ":  # Если введено "КОНЕЦ", прерываем цикл
        break
    words.append(word)  # Иначе добавляем слово в список

# Выводим все слова из списка построчно
for word in words:
    print(word)

#----------------------------------------------------- 

# На вход программе подается последовательность слов, 
# каждое слово на отдельной строке. Концом последовательности является слово «КОНЕЦ» или «конец» (большими или маленькими буквами, без кавычек). 
# При этом сами слова «КОНЕЦ» и «конец» не входят в последовательность, лишь символизируя её окончание. Напишите программу, 
# которая выводит члены данной последовательности.

while True:
    word = input()
    if word == "КОНЕЦ" or word == "конец":
        break
    print(word)

#-----------------------------------------------------

# На вход программе подается последовательность слов, 
# каждое слово на отдельной строке. Концом последовательности является одно из трех слов: 
# «стоп», «хватит», «достаточно» (маленькими буквами, 
# без кавычек). Сами эти слова в последовательность не входят, 
# лишь символизируя её окончание. Напишите программу, 
# которая выводит общее количество членов данной последовательности.

# Инициализируем счётчик
total = 0

# Начинаем бесконечный цикл
while True:
    word = input()  # Считываем слово
    if word == "стоп" or word == "хватит" or word == "достаточно":
        # Если введено стоп-слово, завершаем цикл
        break
    # Увеличиваем счётчик на 1 для каждого введённого слова
    total += 1

# Выводим общее количество слов, кроме стоп-слова
print(total)

#-----------------------------------------------------

# На вход программе подается последовательность целых чисел, каждое число на отдельной строке. 
# Признаком окончания последовательности является любое отрицательное число, 
# при этом в саму последовательность оно не входит. Напишите программу, 
# которая выводит сумму всех членов данной последовательности.

temp = 0
# Начинаем бесконечный цикл для считывания чисел
while True:
    number = int(input())  # Считываем очередное число
    # Проверяем, делится ли оно на 7
    if number < 0:
        # Если не делится, завершаем цикл
        break
    temp +=number
print(temp)

#-----------------------------------------------------

# Всем известно, что ведьмак способен одолеть любых чудовищ, однако его услуги обойдутся недешево. 
# К тому же ведьмак не принимает купюры, 
# он принимает только чеканные монеты. В мире ведьмака существуют монеты с номиналами 1,5,10,25.
# Напишите программу, которая определяет, 
# какое минимальное количество чеканных монет нужно заплатить ведьмаку.

# Вводим цену за услуги
price = int(input())

# Переменная для подсчета общего количества монет
coin_count = 0

# Список номиналов монет, отсортированных по убыванию
coins = [25, 10, 5, 1]

# Используем цикл while, пока цена больше 0
i = 0
while price > 0:
    # Находим, сколько монет текущего номинала можно использовать
    coin_count += price // coins[i]
    # Обновляем цену, используя остаток от деления
    price %= coins[i]
    # Переходим к следующему номиналу
    i += 1

# Выводим минимальное количество монет
print(coin_count)

#-----------------------------------------------------

# Дано натуральное число. Напишите программу, 
# которая меняет порядок цифр числа на обратный.

# Вводим натуральное число
number = int(input())

# Переменная для хранения числа в обратном порядке
reversed_number = 0

# Переворачиваем число
while number > 0:
    # Получаем последнюю цифру числа
    last_digit = number % 10
    # Добавляем её в конец числа в обратном порядке
    reversed_number = reversed_number * 10 + last_digit
    # Убираем последнюю цифру из исходного числа
    number //= 10

# Выводим результат
print(reversed_number)

#-----------------------------------------------------

# Дано натуральное число n(n≥10). Напишите программу, 
# которая определяет его максимальную и минимальную цифры

# Вводим натуральное число
n = int(input())

# Инициализируем максимальную и минимальную цифры
max_digit = 0
min_digit = 9

# Проходим по цифрам числа
while n > 0:
    last_digit = n % 10  # Получаем последнюю цифру
    # Обновляем максимальную и минимальную цифры
    if last_digit > max_digit:
        max_digit = last_digit
    if last_digit < min_digit:
        min_digit = last_digit
    # Удаляем последнюю цифру из числа
    n //= 10

# Выводим результаты
print('Максимальная цифра равна', max_digit)
print('Минимальная цифра равна', min_digit)

#-----------------------------------------------------

# суммa первой и последней цифры в числе

# Вводим натуральное число
n = int(input("Введите число: "))

# Получаем последнюю цифру
last_digit = n % 10

# Находим первую цифру
first_digit = n
while first_digit >= 10:
    first_digit //= 10

# Считаем сумму первой и последней цифры
result = first_digit + last_digit

# Выводим результат
print("Сумма первой и последней цифры равна:", result)

#-----------------------------------------------------

# Дано натуральное число n(n>9). Напишите программу, 
# которая определяет его вторую (с начала) цифру.

# Вводим натуральное число
n = int(input())

# Удаляем первую цифру, пока не останутся только вторая и остальные
while n >= 100:
    n //= 10

# Выводим вторую цифру (первая цифра после удаления всех лишних)
print(n % 10)

#-----------------------------------------------------